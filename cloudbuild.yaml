steps:
  # Step 1: Create and activate virtual environment, install dependencies
  - name: 'python:3.9'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        python3 -m venv venv
        . venv/bin/activate
        pip install --upgrade pip
        pip install -r requirement.txt  # Ensure your requirements.txt is in the repo

  # Step 2: Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/jago-dev-2/jago-microservice'
      - '.'  # Current directory for Docker build context

  # Step 3: Push the Docker image to Google Container Registry (GCR)
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/jago-dev-2/jago-microservice'

  # Step 4: Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'default'  # Replace with your Cloud Run service name
      - '--image'
      - 'gcr.io/jago-dev-2/jago-microservice'  # Ensure the image is correct
      - '--region'
      - 'us-central1'  # Replace with your desired region
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'  # Modify based on your needs for authentication

  # Optional: Delete old Cloud Run revisions (if desired)
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        revisions=$(gcloud run revisions list \
          --service default \
          --format 'value(METADATA.NAME)' \
          --sort-by '~METADATA.CREATION_TIMESTAMP')
        # Skip the most recent revision and delete others
        for revision in $(echo "$revisions" | tail -n +2); do
          gcloud run revisions delete "$revision" \
            --service default \
            --quiet
        done

images:
  - 'gcr.io/jago-dev-2/jago-microservice'  # Ensure the image name is correct

options:
  logging: 'CLOUD_LOGGING_ONLY'  # Use this valid logging option
